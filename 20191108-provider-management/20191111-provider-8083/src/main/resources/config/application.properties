server.port=8083
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/regina?characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.type-aliases-package=com.regina.springcloud.model

# provider在eureka注册后所显示的名字(并不是springcloud中的配置，所有的框架都可以使用该配置，其实就是给这个项目起一个名字(该名字可以重复))
# 如果是以集群的形式存在(负载均衡)，必须保证三台provider的application.name必须一致
spring.application.name=book-provider

eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka
eureka.instance.instance-id=book-provider-8083

# 当鼠标放在eureka服务上在浏览器的左下角会显示服务所部署的服务器的ip地址
# 以下的配置只适用于springcloud的1.x版本，在springcloud1.x版本的时候不会自动的把hostname转换为ip地址(默认为false，必须要手动开启)
# springcloud2.x版本会自动把服务器的HOSTNAME转换为ip地址，方便用户查看该服务在哪一台服务器上所部署(不需要下面信息)
eureka.instance.prefer-ip-address=true

# actuator/info的信息
# 只要是info开头，其他的随意配，开心就好
info.name=regina


# 规定自己向eureka发送心跳的时间(5秒)
# 单节点状态(也就是说eureka中只有一台provider的时候才会是30秒，而且还可以更改，如果有多台，为了避免线程阻塞会不定时发送(30s,60s,90s))
# eureka.instance.lease-renewal-interval-in-seconds=5
# 规定当eureka最后一次检测到心跳的时间间隔(单位是秒)
# 12:01:02是最后一次检测到心跳的时间--->检测到之后8秒之后还是无法检测心跳的时候直接剔除
# 如果不规定，没有默认值，这个是为了双重检测
# eureka.instance.lease-expiration-duration-in-seconds=8